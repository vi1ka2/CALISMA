// src/pages/PublicLandingPage.js

import React, { useEffect, useState } from 'react';
import {
  AppBar,
  Toolbar,
  Typography,
  Button,
  Box,
  Container,
  Grid,
  Paper,
  List,
  ListItem,
  ListItemText,
  Divider
} from '@mui/material';
import { useNavigate } from 'react-router-dom';
import axios from 'axios';

const PublicLandingPage = () => {
  const navigate = useNavigate();
  const [communityPosts, setCommunityPosts] = useState([]);
  const [resources, setResources] = useState([]);

  // Fetch community posts (fallback if no backend)
  useEffect(() => {
    const fetchCommunityPosts = async () => {
      try {
        const res = await axios.get('http://localhost:5000/api/community/posts');
        setCommunityPosts(res.data);
      } catch (error) {
        console.error("Error fetching community posts:", error);
        setCommunityPosts([
          { id: 1, title: "Improve Coding Skills", author: "Anmit", snippet: "Focus on data structures & algorithms." },
          { id: 2, title: "System Design Tips", author: "Trishti", snippet: "Check out these online courses." }
        ]);
      }
    };
    fetchCommunityPosts();
  }, []);

  // Fetch learning resources (fallback if no backend)
  useEffect(() => {
    const fetchResources = async () => {
      try {
        const res = await axios.get('http://localhost:5000/api/resources');
        setResources(res.data);
      } catch (error) {
        console.error("Error fetching resources:", error);
        setResources([
          { id: 1, title: "Cracking the Coding Interview", url: "https://www.geeksforgeeks.org/practice-for-cracking-any-coding-interview/" },
          { id: 2, title: "System Design Primer", url: "https://www.geeksforgeeks.org/system-design-tutorial/" }
        ]);
      }
    };
    fetchResources();
  }, []);

  return (
    <Box sx={{ flexGrow: 1, bgcolor: '#f5f5f5', minHeight: '100vh' }}>
    {/* Top Navigation */}
    <AppBar position="static">
      <Toolbar>
        <Typography variant="h6" sx={{ flexGrow: 1 }}>
          InterviewPrep
        </Typography>
        <Button color="inherit" onClick={() => navigate('/login')}>Login</Button>
        <Button color="inherit" onClick={() => navigate('/register')}>Register</Button>
      </Toolbar>
    </AppBar>

      {/* Hero Section */}
      <Box
        sx={{
          backgroundImage: 'url("https://images.unsplash.com/photo-1504384308090-c894fdcc538d")',
          backgroundSize: 'cover',
          backgroundPosition: 'center',
          minHeight: '70vh',
          display: 'flex',
          flexDirection: 'column',
          justifyContent: 'center',
          alignItems: 'center',
          color: '#fff',
          textAlign: 'center',
          p: 4,
        }}
      >
        <Typography variant="h3" sx={{ fontWeight: 'bold', mb: 2 }}>
          Ace Your Next Interview
        </Typography>
        <Typography variant="h6" sx={{ maxWidth: '600px', mb: 3 }}>
          Practice with AI-driven questions, community insights, and curated resources to boost your confidence.
        </Typography>
        <Button
          variant="contained"
          color="secondary"
          sx={{ fontWeight: 'bold', px: 4, py: 1.5 }}
          onClick={() => navigate('/register')}
        >
          Get Started
        </Button>
      </Box>

      {/* Features Section */}
      <Container maxWidth="md" sx={{ mt: 6 }}>
        <Typography variant="h4" align="center" gutterBottom>
          Why Choose InterviewPrep?
        </Typography>
        <Grid container spacing={4} sx={{ mt: 2 }}>
          <Grid item xs={12} md={4}>
            <Paper sx={{ p: 3, textAlign: 'center' }} elevation={3}>
              <Typography variant="h6" gutterBottom>
                AI-Powered Questions
              </Typography>
              <Typography variant="body2">
                Get dynamic, domain-specific questions generated by advanced AI models.
              </Typography>
            </Paper>
          </Grid>
          <Grid item xs={12} md={4}>
            <Paper sx={{ p: 3, textAlign: 'center' }} elevation={3}>
              <Typography variant="h6" gutterBottom>
                Real-Time Feedback
              </Typography>
              <Typography variant="body2">
                Receive instant, detailed analysis on your answers to improve your skills.
              </Typography>
            </Paper>
          </Grid>
          <Grid item xs={12} md={4}>
            <Paper sx={{ p: 3, textAlign: 'center' }} elevation={3}>
              <Typography variant="h6" gutterBottom>
                Track Your Progress
              </Typography>
              <Typography variant="body2">
                Monitor performance trends and review your interview history.
              </Typography>
            </Paper>
          </Grid>
        </Grid>
      </Container>

      {/* Community Preview */}
      <Container maxWidth="md" sx={{ mt: 6 }}>
        <Typography variant="h4" align="center" gutterBottom>
          Community Discussions
        </Typography>
        <Paper sx={{ p: 3, mt: 2 }}>
          {communityPosts.length > 0 ? (
            <>
              <List>
                {communityPosts.map((post) => (
                  <React.Fragment key={post.id}>
                    <ListItem alignItems="flex-start">
                      <ListItemText
                        primary={post.title}
                        secondary={
                          <>
                            <Typography variant="caption" color="textSecondary">
                              By {post.author}
                            </Typography>
                            <br />
                            {post.snippet}
                          </>
                        }
                      />
                    </ListItem>
                    <Divider component="li" />
                  </React.Fragment>
                ))}
              </List>
              <Box sx={{ textAlign: 'center', mt: 2 }}>
                <Button variant="outlined" color="primary" onClick={() => navigate('/community')}>
                  Go to Community Forum
                </Button>
              </Box>
            </>
          ) : (
            <Typography variant="body2" align="center">
              No community posts available.
            </Typography>
          )}
        </Paper>
      </Container>

      {/* Resources Preview */}
      <Container maxWidth="md" sx={{ mt: 6, mb: 6 }}>
        <Typography variant="h4" align="center" gutterBottom>
          Learning Resources
        </Typography>
        <Paper sx={{ p: 3, mt: 2 }}>
          {resources.length > 0 ? (
            <List>
              {resources.map((resource) => (
                <ListItem key={resource.id}>
                  <ListItemText
                    primary={resource.title}
                    secondary={
                      <a href={resource.url} target="_blank" rel="noopener noreferrer">
                        {resource.url}
                      </a>
                    }
                  />
                </ListItem>
              ))}
            </List>
          ) : (
            <Typography variant="body2" align="center">
              No resources available.
            </Typography>
          )}
        </Paper>
      </Container>

      {/* Footer */}
      <Box sx={{ textAlign: 'center', p: 2, mt: 6, bgcolor: '#e0e0e0' }}>
        <Typography variant="body2">
          &copy; {new Date().getFullYear()} InterviewPrep. All rights reserved.
        </Typography>
      </Box>
    </Box>
  );
};

export default PublicLandingPage;

